{"version":3,"sources":["components/LayoutShards/index.js","components/LayoutShards/Header/index.jsx","components/LayoutShards/SubHeader/index.jsx","components/LayoutShards/Article/index.jsx","components/LayoutShards/Footer/index.jsx","hocs/dnd/constants.js","utils/index.js","hocs/dnd/index.js","hocs/dnd/dragSource.js","hocs/dnd/dropTarget.js","components/LayoutDesk/DropTargetItem/index.jsx","components/LayoutDesk/index.jsx","containers/LayoutsList/index.jsx","components/LeftMenu/index.jsx","constants/index.js","containers/LayoutEditor/index.jsx","reducers/layoutsListReducer.js","reducers/index.js","createStore.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","data-componentid","SubHeader","Article","Footer","MODE","CUT","COPY","generateId","Math","random","toString","substr","dragSource","WrappedComponent","handleDragStartEvent","bind","event","dataTransfer","setData","target","id","draggable","onDragStart","this","React","Component","dropTarget","options","mode","state","isDragHover","hasContent","sourceId","handleDargOverEvent","handleDropEvent","handleDragEnterEvent","handleDragLeaveEvent","preventDefault","effectAllowed","data","getData","nodeCopy","document","getElementById","cloneNode","appendChild","setState","onDrop","onDragOver","onDragEnter","onDragLeave","CONSTANTS","DnD","DropTargetItem","containerRef","createRef","prevProps","onDropEvent","current","children","getAttribute","rest","containerClassName","classNames","ref","defaultProps","LayoutDesk","getDropTargetItem","index","componentId","layout","shardsList","updateLayout","slice","narrowViewOnly","reduce","acc","value","map","key","LayoutShard","LayoutShards","LayoutsList","handleLayoutClick","history","push","layouts","onClick","compose","withRouter","connect","layoutsList","dispatch","LeftMenu","title","Actions","LayoutEditor","handleUpdateLayout","match","params","layoutId","newId","createLayout","replace","Object","keys","ownProps","find","type","payload","initialState","combineReducers","action","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","App","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","to","exact","path","Boolean","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1fa1a477.chunk.js","sourcesContent":["import { Header } from './Header';\nimport { Footer } from './Footer';\nimport { Article } from './Article';\nimport { SubHeader } from './SubHeader';\n\nexport default {\n    Header,\n    SubHeader,\n    Article,\n    Footer,\n};\n","import React from 'react';\n\nimport './styles.scss';\n\nexport function Header(props) {\n    return (\n        <div className=\"sc-header\" data-componentid=\"Header\" {...props}>Header</div>\n    );\n}\n","import React from 'react';\n\nimport './styles.scss';\n\nexport function SubHeader(props) {\n    return (\n        <div className=\"sc-subheader\" data-componentid=\"SubHeader\" {...props}>SubHeader</div>\n    );\n}\n","import React from 'react';\n\nimport './styles.scss';\n\nexport function Article(props) {\n    return (\n        <div className=\"sc-article\" data-componentid=\"Article\" {...props}>Article</div>\n    );\n}\n","import React from 'react';\n\nimport './styles.scss';\n\nexport function Footer(props) {\n    return (\n        <div className=\"sc-footer\" data-componentid=\"Footer\" {...props}>Footer</div>\n    );\n}\n","export const MODE = {\n    CUT: 'cut',\n    COPY: 'copy',\n};\n","export const generateId = () => '_' + Math.random().toString(36).substr(2, 9);\n","import { dragSource } from './dragSource';\nimport { dropTarget } from './dropTarget';\nimport * as CONSTANTS from './constants';\n\nexport default {\n    dragSource,\n    dropTarget,\n    CONSTANTS,\n};\n","import React from 'react';\n\nexport function dragSource(WrappedComponent) {\n\n    return class extends React.Component {\n        constructor(props) {\n            super(props);\n\n            this.handleDragStartEvent = this.handleDragStartEvent.bind(this);\n        }\n\n        handleDragStartEvent(event) {\n            event.dataTransfer.setData('id', event.target.id);\n        }\n  \n        render() {\n            return (\n                <WrappedComponent\n                    draggable\n                    onDragStart={this.handleDragStartEvent}\n                    {...this.props}\n                />\n            );\n        }\n    };\n}\n","import React from 'react';\nimport { MODE } from './constants';\nimport { generateId } from '../../utils';\n\nexport function dropTarget(WrappedComponent, options = { mode: MODE.CUT }) {\n    const { mode } = options;\n\n    return class extends React.Component {\n        constructor(props) {\n            super(props)\n\n            this.state = {\n                isDragHover: false,\n                hasContent: false,\n                sourceId: generateId(),\n            };\n            this.handleDargOverEvent = this.handleDargOverEvent.bind(this);\n            this.handleDropEvent = this.handleDropEvent.bind(this);\n            this.handleDragEnterEvent = this.handleDragEnterEvent.bind(this);\n            this.handleDragLeaveEvent = this.handleDragLeaveEvent.bind(this);\n        }\n\n        handleDargOverEvent(event) {\n            // allow drop\n            event.preventDefault();\n            event.dataTransfer.effectAllowed = mode;\n        }\n    \n        handleDropEvent(event) {\n            event.preventDefault();\n            const data = event.dataTransfer.getData('id');\n            const { sourceId } = this.state;\n\n            switch(mode) {\n                case MODE.COPY: {\n                    const nodeCopy = document.getElementById(data).cloneNode(true);\n                    nodeCopy.id = sourceId;\n        \n                    event.target.appendChild(nodeCopy);\n                    break;\n                }\n                case MODE.CUT:\n                default: {\n                    event.target.appendChild(document.getElementById(data));\n                }\n            }\n            \n\n            this.setState({ isDragHover: false, hasContent: true });\n        }\n\n        handleDragEnterEvent(event) {\n            this.setState({ isDragHover: true });\n        }\n\n        handleDragLeaveEvent() {\n            this.setState({ isDragHover: false });\n        }\n  \n        render() {\n            const { isDragHover, hasContent, sourceId } = this.state;\n\n            return (\n                <WrappedComponent\n                    onDrop={this.handleDropEvent}\n                    onDragOver={this.handleDargOverEvent}\n                    onDragEnter={this.handleDragEnterEvent}\n                    onDragLeave={this.handleDragLeaveEvent}\n                    isDragHover={isDragHover}\n                    hasContent={hasContent}\n                    sourceId={sourceId}\n                    {...this.props}\n                />\n            );\n        }\n    };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nimport './styles.scss';\nimport { DnD } from '../../../hocs';\n\nconst { dropTarget, CONSTANTS: { MODE } } = DnD;\n\nclass DropTargetItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { hasContent, onDropEvent } = this.props;\n\n        if (hasContent && !prevProps.hasContent && onDropEvent) {\n            const componentId = this.containerRef.current.children[1].getAttribute('data-componentid');\n\n            onDropEvent(componentId);\n        }\n    }\n\n    render() {\n        const {\n            isDragHover,\n            hasContent,\n            onDropEvent,\n            sourceId,\n            children,\n            ...rest\n        } = this.props;\n        const containerClassName = classNames(\n            'drop-target-item',\n            {\n                'is-drag-hover': isDragHover,\n                'has-content': hasContent || !!children,\n            },\n        );\n    \n        return (\n            <div ref={this.containerRef} className={containerClassName} {...rest}>\n                <AddCircleOutlineIcon />\n                {children}\n            </div>\n        );\n    }\n}\n\nDropTargetItem.propTypes = {\n    id: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]).isRequired,\n    sourceId: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]).isRequired,\n    isDragHover: PropTypes.bool,\n    hasContent: PropTypes.bool,\n    onDropEvent: PropTypes.func,\n    children: PropTypes.node,\n};\n\nDropTargetItem.defaultProps = {\n    isDragHover: false,\n    hasContent: false,\n    onDropEvent: null,\n};\n\nexport default dropTarget(DropTargetItem, { mode: MODE.COPY });\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport LayoutShards from '../../components/LayoutShards';\nimport DropTargetItem from './DropTargetItem';\nimport { generateId } from '../../utils';\nimport './styles.scss';\n\nclass LayoutDesk extends React.Component {\n    getDropTargetItem = (children, index) => (\n        <DropTargetItem id={generateId()} onDropEvent={this.handleDropEvent(index)}>\n            {children}\n        </DropTargetItem>\n    );\n\n    handleDropEvent = (index) => (componentId) => {\n        const { id, shardsList } = this.props.layout;\n\n        this.props.updateLayout(id, [...shardsList.slice(0, index), componentId, ...shardsList.slice(index)]);\n    };\n\n    render() {\n        const { layout: { shardsList }, narrowViewOnly } = this.props;\n\n        return (\n            <div className={classNames('layout-desk', { 'narrow-view': narrowViewOnly })}>\n                {!narrowViewOnly && shardsList\n                    .reduce((acc, value) => [...acc, value, 'add-bar'], ['add-bar'])\n                    .map((componentId, index) => {\n                        if (componentId === 'add-bar') {\n                            return (\n                                <Fragment key={generateId()}>\n                                    {this.getDropTargetItem(null, index / 2)}\n                                </Fragment>\n                            );\n                        }\n\n                        const LayoutShard = LayoutShards[componentId];\n\n                        return (\n                            <Fragment key={index}>\n                                {this.getDropTargetItem(<LayoutShard />, index)}\n                            </Fragment>\n                        );\n                    })\n                }\n                {\n                    narrowViewOnly && shardsList.map((componentId, index) => {\n                        const LayoutShard = LayoutShards[componentId];\n\n                        return (<LayoutShard key={index} />);\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nLayoutDesk.propTypes = {\n    layout: PropTypes.shape({\n        id: PropTypes.string,\n        shardsList: PropTypes.array,\n    }),\n    updateLayout: PropTypes.func,\n    narrowViewOnly: PropTypes.bool,\n};\n\nLayoutDesk.defaultProps = {\n    layout: { shardsList: [] },\n    narrowViewOnly: false,\n};\n\nexport default LayoutDesk;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport AddSharp from '@material-ui/icons/AddSharp';\n\nimport LayoutDesk from '../../components/LayoutDesk';\n\nimport './styles.scss';\n\nclass LayoutsList extends React.Component {\n    handleLayoutClick = (id) => () => {\n        this.props.history.push(`/edit/${id}`);\n    };\n\n    render() {\n        const { layouts } = this.props;\n\n        return (\n            <div className=\"layouts-list\">\n                <div className=\"title\">{\"Layouts Screen\"}</div>\n                <div className=\"content\">\n                    <div className=\"layout\" onClick={this.handleLayoutClick('new')}>\n                        <AddSharp className=\"add-icon\" />\n                    </div>\n                    {\n                        layouts.map((layout) => {\n                            return (\n                                <div key={layout.id} className=\"layout\" onClick={this.handleLayoutClick(layout.id)}>\n                                    <LayoutDesk layout={layout} narrowViewOnly />\n                                </div>\n                            );\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nLayoutsList.propTypes = {\n    layouts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string,\n        shardsList: PropTypes.arrayOf(PropTypes.string),\n    }))\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        layouts: state.layoutsList.layouts,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {}\n};\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps),\n)(LayoutsList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst LeftMenu = ({ title, children }) => {\n    return (\n        <aside className=\"left-menu\">\n            <div className=\"title\">{title}</div>\n            <div className=\"content\">{children}</div>\n        </aside>\n    );\n};\n\nLeftMenu.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node,\n};\n\nexport default LeftMenu;\n","export const Actions = {\n    CREATE_LAYOUT: 'CREATE_LAYOUT',\n    UPDATE_LAYOUT: 'UPDATE_LAYOUT',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { DnD } from '../../hocs';\nimport LeftMenu from '../../components/LeftMenu';\nimport LayoutDesk from '../../components/LayoutDesk';\nimport LayoutShards from '../../components/LayoutShards';\nimport { generateId } from '../../utils';\nimport { Actions } from '../../constants';\nimport './styles.scss';\n\nconst { dragSource } = DnD;\n\nclass LayoutEditor extends React.Component {\n    handleUpdateLayout = (id, shardsList) => this.props.updateLayout(id, shardsList);\n\n    componentDidMount() {\n        const { layout } = this.props;\n        const { layoutId } = this.props.match.params;\n\n        if (layoutId === 'new' || !layout) {\n            const newId = generateId();\n\n            this.props.createLayout(newId);\n            this.props.history.replace(`/edit/${newId}`);\n        }\n    }\n\n    render() {\n        const { layout } = this.props;\n        \n        return (\n            <div className=\"layout-editor\">\n                <LeftMenu title=\"Components\">\n                    <ul className=\"components-list\">\n                        {\n                            Object.keys(LayoutShards).map((key) => {\n                                const LayoutShard = dragSource(LayoutShards[key]);\n\n                                return (\n                                    <li key={key}>\n                                        <LayoutShard id={`sc-${key}`} />\n                                    </li>\n                                );\n                            })\n                        }\n                    </ul>\n                </LeftMenu>\n                <section className=\"container\">\n                    <div className=\"title\">{\"Configuration Screen\"}</div>\n                    <LayoutDesk layout={layout} updateLayout={this.handleUpdateLayout} />\n                </section>\n            </div>\n        );\n    }\n}\n\nLayoutEditor.propTypes = {\n    layout: PropTypes.shape({\n        id: PropTypes.string,\n        shardsList: PropTypes.arrayOf(PropTypes.string),\n    }),\n    createLayout: PropTypes.func.isRequired,\n    updateLayout: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const { layoutId } = ownProps.match.params;\n\n    return {\n        layout: state.layoutsList.layouts.find(({ id }) => id === layoutId),\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        createLayout: (id) => dispatch({ type: Actions.CREATE_LAYOUT, payload: { id } }),\n        updateLayout: (id, shardsList) => dispatch({ type: Actions.UPDATE_LAYOUT, payload: { id, shardsList } }),\n    }\n};\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps),\n)(LayoutEditor);\n","import { Actions } from '../constants';\n\nconst initialState = {\n  layouts: [],\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case Actions.CREATE_LAYOUT: {\n            const newId = payload.id;\n\n            return {\n                ...state,\n                layouts: [...state.layouts, { id: newId, shardsList: [] }],\n            };\n        }\n\n        case Actions.UPDATE_LAYOUT: {\n            const layouts = state.layouts.map((layout) => {\n                const { id, shardsList } = payload;\n\n                if (layout.id === id) {\n                    return { id, shardsList };\n                }\n\n                return layout;\n            });\n\n            return { ...state, layouts };\n        }\n\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport layoutsList from './layoutsListReducer';\n\nexport default combineReducers({\n    layoutsList,\n});\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\n/* eslint-disable no-underscore-dangle */\nconst store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n/* eslint-enable */\n\nexport default store;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport LayoutsList from './containers/LayoutsList';\nimport LayoutEditor from './containers/LayoutEditor';\nimport store from './createStore';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\">\n              <Link to=\"/\">Home</Link>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Switch>\n          <Route exact path=\"/\">\n            <LayoutsList />\n          </Route>\n          <Route path=\"/edit/:layoutId\">\n            <LayoutEditor />\n          </Route>\n          <Route>\n            {() => (<div>Page not found :(</div>)}\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}